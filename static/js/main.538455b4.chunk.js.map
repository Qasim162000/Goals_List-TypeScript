{"version":3,"sources":["components/CourseGoals/CourseGoalItem/CourseGoalItem.tsx","components/CourseGoals/CourseGoalList/CourseGoalList.tsx","components/UI/Button/Button.tsx","components/CourseGoals/CourseInput/CourseInput.tsx","App.tsx","index.tsx"],"names":["CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","items","map","goal","onDeleteItem","text","Button","styled","button","CourseInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","onAddGoal","type","onChange","target","value","App","courseGoals","setCourseGoals","content","style","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"sTAsBeA,EAZQ,SAACC,GAKtB,OACE,oBAAIC,UAAU,YAAYC,QALN,WACpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCYEC,G,MAhBQ,SAACN,GACtB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEL,GAAIK,EAAKL,GACTD,SAAUH,EAAMU,aAHlB,SAKGD,EAAKE,MAJDF,EAAKL,W,QCaLQ,E,MA7BAC,EAAOC,OAAV,6XCyCGC,G,MAjCK,SAACf,GACnB,MAAwCgB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OACE,uBAAMC,SAVkB,SAACC,GACzBA,EAAMC,iBAC6B,IAA/BN,EAAaO,OAAOC,OAIxBzB,EAAM0B,UAAUT,GAHdG,GAAW,IAOb,UACE,sBAAKnB,UAAS,uBAAmBkB,EAAsB,GAAZ,WAA3C,UACE,gDACA,uBAAOQ,KAAK,OAAOC,SAtBM,SAC7BN,GAEIA,EAAMO,OAAOC,MAAMN,OAAOC,OAAS,GACrCL,GAAW,GAEbF,EAAgBI,EAAMO,OAAOC,aAkB3B,cAAC,EAAD,CAAQH,KAAK,SAAb,2BCkBSI,G,MAlDH,WACV,MAAsCf,mBAAS,CAC7C,CAAEL,KAAM,oBAAqBP,GAAI,MACjC,CAAEO,KAAM,qBAAsBP,GAAI,QAFpC,mBAAO4B,EAAP,KAAoBC,EAApB,KAoBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CASF,OANIJ,EAAYP,OAAS,IACvBS,EACE,cAAC,EAAD,CAAgB3B,MAAOyB,EAAatB,aAbd,SAAC2B,GACzBJ,GAAe,SAACK,GAEd,OADqBA,EAAUC,QAAO,SAAC9B,GAAD,OAAUA,EAAKL,KAAOiC,YAgB9D,gCACE,yBAASjC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAasB,UA5BI,SAACc,GACtBP,GAAe,SAACK,GACd,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAE/B,KAAM6B,EAAapC,GAAIuC,KAAKC,SAASC,aACrDJ,UA0BP,yBAASrC,GAAG,QAAZ,SACG8B,SCrCTY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.538455b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CourseGoalItem.css\";\r\n\r\ntype CourseGoalItemProps = {\r\n  key: string;\r\n  id: string;\r\n  onDelete: (goalId: any) => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst CourseGoalItem = (props: CourseGoalItemProps) => {\r\n  const deleteHandler = () => {\r\n    props.onDelete(props.id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"goal-item\" onClick={deleteHandler}>\r\n      {props.children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CourseGoalItem;\r\n","import React from \"react\";\r\n\r\nimport CourseGoalItem from \"../CourseGoalItem/CourseGoalItem\";\r\nimport \"./CourseGoalList.css\";\r\n\r\ntype CourseGoalListProps = {\r\n  items: {\r\n    text: string;\r\n    id: string;\r\n  }[];\r\n  onDeleteItem: (goalId: any) => void;\r\n};\r\n\r\nconst CourseGoalList = (props: CourseGoalListProps) => {\r\n  return (\r\n    <ul className=\"goal-list\">\r\n      {props.items.map((goal) => (\r\n        <CourseGoalItem\r\n          key={goal.id}\r\n          id={goal.id}\r\n          onDelete={props.onDeleteItem}\r\n        >\r\n          {goal.text}\r\n        </CourseGoalItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CourseGoalList;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font: inherit;\r\n  padding: 0.5rem 1.5rem;\r\n  border: 1px solid #8b005d;\r\n  color: white;\r\n  background: #8b005d;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover,\r\n  &:active {\r\n    background: #ac0e77;\r\n    border-color: #ac0e77;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\r\n  }\r\n`;\r\n\r\n// const Button = (props) => {\r\n//   return (\r\n//     <button type={props.type} className=\"button\" onClick={props.onClick}>\r\n//       {props.children}\r\n//     </button>\r\n//   );\r\n// };\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\nimport \"./CourseInput.css\";\r\n\r\ntype CourseInputProps = {\r\n  onAddGoal: (enteredText: any) => void;\r\n  // formSubmitHandler: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n};\r\n\r\nconst CourseInput = (props: CourseInputProps) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const goalInputChangeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (enteredValue.trim().length === 0) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n    props.onAddGoal(enteredValue);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className={`form-control ${!isValid ? \"invalid\" : \"\"}`}>\r\n        <label>Course Goal</label>\r\n        <input type=\"text\" onChange={goalInputChangeHandler} />\r\n      </div>\r\n      <Button type=\"submit\">Add Goal</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CourseInput;\r\n","import React, { useState } from \"react\";\r\n\r\nimport CourseGoalList from \"./components/CourseGoals/CourseGoalList/CourseGoalList\";\r\nimport CourseInput from \"./components/CourseGoals/CourseInput/CourseInput\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [courseGoals, setCourseGoals] = useState([\r\n    { text: \"Do all exercises!\", id: \"g1\" },\r\n    { text: \"Finish the course!\", id: \"g2\" },\r\n  ]);\r\n\r\n  const addGoalHandler = (enteredText: string) => {\r\n    setCourseGoals((prevGoals) => {\r\n      const updatedGoals = [...prevGoals];\r\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\r\n      return updatedGoals;\r\n    });\r\n  };\r\n\r\n  const deleteItemHandler = (goalId: string) => {\r\n    setCourseGoals((prevGoals) => {\r\n      const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\r\n      return updatedGoals;\r\n    });\r\n  };\r\n\r\n  let content = (\r\n    <p style={{ textAlign: \"center\" }}>No goals found. Maybe add one?</p>\r\n  );\r\n\r\n  if (courseGoals.length > 0) {\r\n    content = (\r\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section id=\"goal-form\">\r\n        <CourseInput onAddGoal={addGoalHandler} />\r\n      </section>\r\n      <section id=\"goals\">\r\n        {content}\r\n        {/* {courseGoals.length > 0 && (\r\n          <CourseGoalList\r\n            items={courseGoals}\r\n            onDeleteItem={deleteItemHandler}\r\n          />\r\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\r\n        } */}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}